# Project language
language: php

# Allows use container-based infrastructure
sudo: false
#sudo: required
#dist: trusty

# Start mysql service
services:
  - mysql
  - elasticsearch

# Cache composer packages so "composer install" is faster
cache:
    yarn: true
    directories:
        - $HOME/.composer/cache/files
        - $HOME/.cache/pip

# Matrix to test in every php version
#matrix:
  # Fast finish allows to set the build as "finished" even if the "allow_failures" matrix elements are not finished yet.
#  fast_finish: true
#  include:
#    - php: 5.5
#    - php: 5.6
#    - php: 7.0
#    - php: 7.1
#    - php: 7.2
#    - php: hhvm
#  allow_failures:
#    - php: hhvm

# Versions of PHP to test against
php:
#    - "5.6"
    - "7.0"
#    - "7.1"
#    - "7.2"
    
# Define an environment variable
env:
  - AKENEO_VERSION="2.0@dev"
  - AKENEO_VERSION="2.1@dev"

before_install:
# Update composer
  - composer self-update
# Install Yarn
  - yarn 
# Increase memory limit to 4GB  
  - phpenv config-rm xdebug.ini
  - phpenv config-add build/x_memory.ini
#  - phpenv config-add build/x_errors.ini
  - php -ini | grep memory_limit  

# Create database, schema and fixtures
  - mysql -e 'CREATE DATABASE IF NOT EXISTS akeneo;'
  
# Install composer dependencies,
install:   
    - echo "Install Akeneo & Splash Bundles"
    - composer update --no-interaction --prefer-dist
    
#    - composer create-project akeneo/pim-community-standard akeneo $AKENEO_VERSION --prefer-dist
#    - cd akeneo
#    
#    - echo "Install Splash Bundles"
#    - composer require splash/phpcore:dev-master splash/php-bundle:dev-master splash/akeneo-bundle:dev-master --no-interaction --prefer-dist

    - echo "Configuring Akeneo"
    - cp    vendor/akeneo/pim-community-dev/app/config/pim_parameters.yml app/config/pim_parameters.yml
    
    - echo "Configuring Splash Bundles"
    - cp ../build/parameters.yml.dist app/config/parameters.yml
    - cp ../build/phpunit.xml.dist phpunit.xml.dist
    
    - echo "Install Akeneo"
    - php bin/console pim:installer:assets  --symlink --clean --env=test --no-interaction --no-debug
    - php bin/console pim:install --force   --symlink --clean --env=test --no-interaction --no-debug

    - echo "Enable Splash Bundles"
#    - cp ../build/AppKernel.php app/AppKernel.php
    - cat ../Build/config_splash.yml    >> app/config/config.yml
    - cat ../Build/routing_splash.yml   >> app/config/routing.yml
    
    - echo "Start Web Srever"
    - php bin/console server:start --env=test

# Run script
script:
  - phpunit
#  - phpunit

# After a build, send email notification with the build results
#notifications:
#  email: your_email